/* layout.module.css - layout & component styles (module-scoped) */

/* container */
.container {
  max-width: var(--container-w);
  margin: 0 auto;
  padding: 28px;
}

/* header (fixed) */
.siteHeader {
  background: var(--card);
  box-shadow: var(--shadow);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 1000;
  height: var(--header-h);
  display: flex;
  align-items: center;
}

/* header inner uses same container width */
.headerInner {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  max-width: var(--container-w);
  margin: 0 auto;
  padding: 0 28px;
  box-sizing: border-box;
}

/* brand */
.brand {
  font-weight: 700;
  font-size: 20px;
  color: var(--text);
  text-decoration: none;
}

/* header actions */
.headerActions {
  display: flex;
  align-items: center;
  gap: 12px;
}

/* main layout grid (left sidebar + right content) */
/* add top padding equal to header height so content sits below header */
.main {
  display: grid;
  grid-template-columns: 260px 1fr;
  gap: 28px;
  align-items: start;
  padding-top: calc(var(--header-h) + 20px);
}

/* footer */
.siteFooter {
  margin-top: 48px;
  padding: 24px 0;
  text-align: center;
  color: var(--muted);
}

/* responsive */
@media (max-width: 920px) {
  .main {
    grid-template-columns: 1fr;
    padding: 20px 12px;
  }
}

/* sidebar / filter card */
.filterSidebar,
.sidebar,
.filters,
.aside,
.main > aside {
  background: var(--card);
  color: var(--text);
  padding: 18px;
  border-radius: var(--radius);
  box-shadow: var(--shadow);
}

/* small text */
.muted,
.filterHelp {
  color: var(--muted);
  font-size: 0.9rem;
}

/* ---------- GLOBAL ELEMENT RULES (wrapped with :global) ---------- */
/* Using :global(...) tells CSS Modules these selectors are global/pure */

/* inputs, textareas, selects, and buttons (global) */
:global(input),
:global(textarea),
:global(select),
:global(button) {
  color: var(--text);
  background: var(--control-bg);
  border: 1px solid var(--control-border);
  border-radius: 8px;
  padding: 8px 10px;
  font: inherit;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

/* placeholder color */
:global(input::placeholder),
:global(textarea::placeholder) {
  color: var(--muted);
}

/* theme toggle button with aria-label */
:global(button[aria-label="Toggle theme"]) {
  border-radius: 10px;
  padding: 8px 10px;
  background: var(--control-bg);
  border: 1px solid var(--control-border);
  cursor: pointer;
}

/* native select padding for arrow space */
:global(select) {
  padding-right: 28px;
}

/* option styling (may vary across browsers) */
:global(option) {
  color: var(--text);
  background: var(--card);
}

/* dropdown / menu panels that are global */
:global(.custom-dropdown),
:global(.custom-dropdown .item),
:global(.dropdown-menu),
:global(.menu-item) {
  color: var(--text);
  background: var(--card);
}

/* focus states for global form controls */
:global(input:focus),
:global(textarea:focus),
:global(select:focus),
:global(button:focus) {
  box-shadow: 0 0 0 4px rgba(96, 165, 250, 0.12);
  border-color: var(--primary);
}

/* listbox / role-based panels */
:global([role="listbox"]),
:global([role="menu"]),
:global(.select-panel) {
  background: var(--card);
  color: var(--text);
}

/* select wrapper arrow helper (local class .selectWrapper still works) */
.selectWrapper {
  position: relative;
  display: inline-block;
}
:global(.selectWrapper::after) {
  content: "â–¾";
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  color: var(--muted);
}

/* small helper selectors used inside cards */
.cardSmallText,
.filterLabel {
  color: var(--muted);
  display: block;
  margin-bottom: 6px;
  font-size: 0.875rem;
}
